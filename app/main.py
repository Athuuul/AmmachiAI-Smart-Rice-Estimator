import streamlit as st
from predictor import predict_rice_amount
from utils.voice import speak_malayalam
import time
from fractions import Fraction

st.set_page_config(page_title="AmmachiAI üçö", page_icon="üëµ", layout="centered")

st.title("üëµ AmmachiAI: Smart Rice Estimator")
st.markdown("##### _‚ÄúChoru ethra venamennu ariyilla? Ammachi parayatte!‚Äù_")
st.divider()

# Fraction formatting
def format_fraction(value):
    rounded = round(value * 4) / 4  # Round to nearest ¬º
    whole = int(rounded)
    frac = rounded - whole

    if frac == 0:
        return f"{whole}"
    else:
        fraction_str = str(Fraction(frac).limit_denominator(4))
        return f"{whole} {fraction_str}" if whole > 0 else f"{fraction_str}"

# Malayalam formatting
def format_malayalam(cups):
    mapping = {
        0.25: "‡¥ï‡µç‡¥µ‡¥æ‡µº‡¥ü‡µç‡¥ü‡µº", 0.5: "‡¥Ö‡¥∞", 0.75: "‡¥Æ‡µÅ‡¥ï‡µç‡¥ï‡¥æ‡µΩ", 1.0: "‡¥í‡¥®‡µç‡¥®‡µç",
        1.25: "‡¥í‡¥®‡µç‡¥®‡µÅ ‡¥ï‡µç‡¥µ‡¥æ‡µº‡¥ü‡µç‡¥ü‡µº", 1.5: "‡¥í‡¥®‡µç‡¥®‡µÅ ‡¥Ö‡¥∞", 1.75: "‡¥í‡¥®‡µç‡¥®‡µÅ ‡¥Æ‡µÅ‡¥ï‡µç‡¥ï‡¥æ‡µΩ",
        2.0: "‡¥∞‡¥£‡µç‡¥ü‡µç", 2.25: "‡¥∞‡¥£‡µç‡¥ü‡µÅ ‡¥ï‡µç‡¥µ‡¥æ‡µº‡¥ü‡µç‡¥ü‡µº", 2.5: "‡¥∞‡¥£‡µç‡¥ü‡µÅ ‡¥Ö‡¥∞", 2.75: "‡¥∞‡¥£‡µç‡¥ü‡µÅ ‡¥Æ‡µÅ‡¥ï‡µç‡¥ï‡¥æ‡µΩ",
        3.0: "‡¥Æ‡µÇ‡¥®‡µç‡¥®‡µÅ", 3.25: "‡¥Æ‡µÇ‡¥®‡µç‡¥®‡µÅ ‡¥ï‡µç‡¥µ‡¥æ‡µº‡¥ü‡µç‡¥ü‡µº", 3.5: "‡¥Æ‡µÇ‡¥®‡µç‡¥®‡µÅ ‡¥Ö‡¥∞", 3.75: "‡¥Æ‡µÇ‡¥®‡µç‡¥®‡µÅ ‡¥Æ‡µÅ‡¥ï‡µç‡¥ï‡¥æ‡µΩ",
        4.0: "‡¥®‡¥æ‡¥≤‡µÅ", 4.25: "‡¥®‡¥æ‡¥≤‡µÅ ‡¥ï‡µç‡¥µ‡¥æ‡µº‡¥ü‡µç‡¥ü‡µº", 4.5: "‡¥®‡¥æ‡¥≤‡µÅ ‡¥Ö‡¥∞", 4.75: "‡¥®‡¥æ‡¥≤‡µÅ ‡¥Æ‡µÅ‡¥ï‡µç‡¥ï‡¥æ‡µΩ",
        5.0: "‡¥Ö‡¥û‡µç‡¥ö‡µÅ"
    }
    rounded = round(cups * 4) / 4
    return mapping.get(rounded, f"{rounded:.2f}")

# Inputs
num_people = st.slider("üë®‚Äçüë©‚Äçüëß‚Äçüë¶ Number of People", 1, 20, 4)
appetite = st.selectbox("üç¥ Appetite Level", ["Low", "Medium", "High"])
meal_type = st.selectbox("üç± Meal Type", ["Lunch", "Dinner", "Sadhya", "Breakfast"])
guest = st.radio("üéÅ Guest Present?", ["Yes", "No"], horizontal=True)
side_dishes = st.slider("ü•ó Number of Side Dishes", 1, 6, 3)
age_group = st.selectbox("üéÇ Average Age Group", ["Youth", "Adult", "Senior", "Mixed"])
rice_type = st.radio("üçö Rice Type", ["White Rice", "Kerala Matta Rice"], horizontal=True)

# Prediction
if st.button("üß† Predict Rice Quantity"):
    rice_amount = predict_rice_amount(
        num_people=num_people,
        appetite_level=appetite,
        meal_type=meal_type,
        guest_present=guest,
        side_dishes=side_dishes,
        avg_age_group=age_group
    )

    st.success(f"üçö You need approximately **{rice_amount:.2f} grams** of raw rice.")

    rice_per_cup = 200  # grams per cup
    cups = rice_amount / rice_per_cup
    water_cups = cups * 2 if rice_type == "White Rice" else cups * 2.5

    rice_frac = format_fraction(cups)
    water_frac = format_fraction(water_cups)
    rice_ml = format_malayalam(cups)
    water_ml = format_malayalam(water_cups)

    st.markdown("### üßÇ Cooking Estimate:")
    st.markdown(f"""
    - üçö **Rice:** {rice_frac} cups  
    - üíß **Water:** {water_frac} cups  
    """)

    # Malayalam voice line
    st.markdown("---")
    st.markdown("üëµ **Ammachi Says:**")

    if rice_amount > 800:
        quote = "‡¥é‡¥§‡µç‡¥∞‡¥Ø‡µä ‡¥ï‡µÅ‡¥±‡¥Ø‡µÅ‡¥®‡µç‡¥®‡µÅ! ‡¥í‡¥∞‡µÅ ‡¥∏‡¥¶‡µç‡¥Ø‡¥Ø‡µç‡¥ï‡µç‡¥ï‡µç ‡¥µ‡µá‡¥£‡µç‡¥ü‡¥ø‡¥Ø‡¥æ‡¥£‡µã ‡¥á‡¥§‡µç‡¥∞‡¥Ø‡µÅ‡¥Ç?"
    elif rice_amount < 300:
        quote = "‡¥á‡¥§‡µÅ‡¥ï‡µä‡¥£‡µç‡¥ü‡µç ‡¥®‡¥ø‡¥®‡¥ï‡µç‡¥ï‡µç ‡¥Æ‡¥§‡¥ø‡¥Ø‡¥æ‡¥ï‡µÅ‡¥Ç ‡¥é‡¥®‡µç‡¥®‡µÜ ‡¥µ‡¥ø‡¥∂‡µç‡¥µ‡¥æ‡¥∏‡¥Ç ‡¥µ‡¥∞‡¥ø‡¥≤‡µç‡¥≤."
    else:
        quote = "‡¥®‡¥®‡µç‡¥®‡¥æ‡¥Ø‡¥ø ‡¥ï‡¥£‡¥ï‡µç‡¥ï‡¥æ‡¥ï‡µç‡¥ï‡¥ø. ‡¥ö‡µã‡¥±‡¥ø‡¥®‡µä‡¥™‡µç‡¥™‡¥Ç ‡¥™‡µÅ‡¥≥‡µç‡¥≥‡¥ø‡¥∂‡µá‡¥∞‡¥ø ‡¥ï‡µÇ‡¥ü‡¥ø ‡¥µ‡µá‡¥£‡¥Æ‡µã?"

    # Add rice/water Malayalam line
    rice_line = f"{rice_ml} ‡¥ï‡¥™‡µç‡¥™‡µç ‡¥Ö‡¥∞‡¥ø‡¥Ø‡µÅ‡¥Ç {water_ml} ‡¥ï‡¥™‡µç‡¥™‡µç ‡¥µ‡µÜ‡¥≥‡µç‡¥≥‡¥µ‡µÅ‡¥Æ‡¥æ‡¥£‡µç ‡¥µ‡µá‡¥£‡µç‡¥ü‡¥§‡µç."
    full_message = quote + " " + rice_line

    st.info(f"‚Äú{full_message}‚Äù")

    audio_path = speak_malayalam(full_message)
    with open(audio_path, 'rb') as audio_file:
        st.audio(audio_file.read(), format='audio/mp3')
